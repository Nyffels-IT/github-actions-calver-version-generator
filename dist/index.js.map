{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAAsC;AACtC,wDAA0C;AAC1C,kDAA0B;AAE1B,KAAK,UAAU,GAAG;IAChB,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC;QACrD,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC;QACrD,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QAE7C,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC7C,IAAI,UAAU,GAAG,IAAA,eAAK,EAAC,WAAW,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACtB,UAAU,GAAG,MAAM,GAAG,UAAU,CAAC;QACnC,CAAC;QACD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACtB,UAAU,IAAI,MAAM,CAAC;QACvB,CAAC;QAED,QAAQ,UAAU,EAAE,CAAC;YACnB,OAAO,CAAC,CAAC,CAAC;gBACR,UAAU,IAAI,IAAI,WAAW,EAAE,CAAC;YAClC,CAAC;QACH,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACxC,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;AACH,CAAC;AAED,GAAG,EAAE,CAAC","sourcesContent":["import * as core from \"@actions/core\";\r\nimport * as github from \"@actions/github\";\r\nimport dayjs from \"dayjs\";\r\n\r\nasync function run() {\r\n  try {\r\n    const prefix = core.getInput(\"prefix\") ?? \"\";\r\n    const suffix = core.getInput(\"suffix\") ?? \"\";\r\n    const format = core.getInput(\"format\") ?? \"YYYYMMDD\";\r\n    const subversion = core.getInput(\"build\") ?? \"build\";\r\n    const buildNumber = github.context.runNumber;\r\n\r\n    const currentDate = new Date().toUTCString();\r\n    let versionStr = dayjs(currentDate).format(format);\r\n    if (prefix.length > 0) {\r\n      versionStr = prefix + versionStr;\r\n    }\r\n    if (suffix.length > 0) {\r\n      versionStr += suffix;\r\n    }\r\n\r\n    switch (subversion) {\r\n      default: {\r\n        versionStr += `.${buildNumber}`;\r\n      }\r\n    }\r\n\r\n    core.exportVariable(\"VERSION\", versionStr);\r\n    core.setOutput(\"version\", versionStr);\r\n  } catch (err) {\r\n    core.setFailed(err.message);\r\n  }\r\n}\r\n\r\nrun();\r\n"]}